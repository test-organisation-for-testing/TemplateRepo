# Workflow sets up the ECR Repository, Permissions and Lambda function for a newly created repo (from template)
name: AWS Lambda Function Initialisation

on:
  # Trigger when the repo is created
  create:

  # For testing, allow the workflow to be triggered manually
  workflow_dispatch:
  push:

jobs:
  # Initialise resources on AWS
  init:
    runs-on: ubuntu-latest
    env:
      NEW_FUNCTION_NAME: ${{ github.event.repository.name }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      # Setup AWS Credentials with the FunctionInitialisator user's keys
      # (will be detected and used by the following calls to the AWS CLI)
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.INIT_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.INIT_SECRET_ACCESS_KEY }}
          aws-region: eu-west-2

      - name: Create new ECR Repository
        id: create-new-repo
        run: |
          aws ecr create-repository \
            --repository-name $NEW_FUNCTION_NAME \
            --query 'repository.repositoryArn'
            | tee output.json
          res_code=${PIPESTATUS[0]}
          echo "::set-output name=cli-output::$(cat output.json)"
          exit $res_code

      # In order to initialise a new lambda function, we need to have an image in the new ECR repo,
      # Let's create one
      # - name: Login to Amazon ECR
      #   id: login-ecr
      #   uses: aws-actions/amazon-ecr-login@v1
      - name: Dump prev step output
        env:
          OUTPUT_PLEASE: ${{ toJSON(steps.create-new-repo.outputs.cli-output) }}
        run: echo "$OUTPUT_PLEASE"
